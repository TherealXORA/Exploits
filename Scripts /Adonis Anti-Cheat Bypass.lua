--// This is not the X version this is a test \\--

--// Adonis Bypasser - Version: X \\--
local Adonis = {
    Tables = {
        "indexinstance",
        "newindexinstance",
        "namecallinstance",
        "indexenum",
        "namecallenum",
        "eqenum",
    },
}

for Key, Object in pairs(getgc(true)) do
    if type(Object) == "table" then
        if isreadonly(Object) then
            setreadonly(Object, false)
        end
        
        for Index, Value in pairs(Object) do
            local LIndex = tostring(Index):lower()
            
            if table.find(Adonis.Tables, LIndex) and type(Value) == "table" then
                if isreadonly(Value) then
                    setreadonly(Value, false)
                end
                rawset(Object, Index, {"kick", function(Reason) return coroutine.yield(coroutine.running()) end})
            end
            
            if type(Value) == "function" and LIndex == "detected" then
                local UpValues = debug.getupvalues(Value)
                
                for UpIndex, UpValue in pairs(UpValues) do
                    if type(UpValue) == "function" then
                        debug.setupvalue(Value, UpIndex, function(Detection)
                            return coroutine.yield(coroutine.running())
                        end)
                    end
                end
            end
        end
    end
end

return true

